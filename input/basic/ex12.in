/*
(declare-fun G (Int Int) Bool)
(declare-fun Plus (Int Int Int) Bool)
(declare-fun mu () Bool)
(declare-fun nu () Bool)

(assert (forall ((x Int) (z Int)) (G x z)))

(assert (forall ((x Int) (z Int))
  (= (G x z) (or (> x z)
    (exists ((y Int)) (Plus x y z))))))

(assert (and mu (forall ((x Int) (y Int) (r Int))
  (= (Plus x y r) (or
    (and (= y 0) (= r x))
    (Plus x (- y 1) (- r 1)))))))

(check-sat)

*/